{"version":3,"sources":["Box.js","Container.js","App.js","index.js"],"names":["Box","props","handleClick","newColor","choice","colorArr","setState","color","arr","Math","floor","random","length","state","className","style","backgroundColor","this","onClick","Component","defaultProps","Container","boxes","Array","from","numBoxes","map","App","textAlign","ReactDOM","render","document","getElementById"],"mappings":"wcAGMA,E,uNAoDJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,YAAc,WACZ,IAAIC,EAAW,EAAKC,OAAO,EAAKH,MAAMI,UACtC,EAAKC,SAAS,CACZC,MAAOJ,KAVQ,EAcnBC,OAAS,SAACI,GAER,OAAOA,EADOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,UAb7C,EAAKC,MAAQ,CACXN,MAAO,EAAKH,OAAO,EAAKH,MAAMI,WAHf,E,qDAoBjB,OACE,yBACES,UAAU,MACVC,MAAO,CACLC,gBAAiBC,KAAKJ,MAAMN,OAE9BW,QAASD,KAAKf,kB,GA9EJiB,aAAZnB,EACGoB,aAAe,CACpBf,SAAU,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAoCSL,Q,qQCnFTqB,E,4UAKF,IAAMC,EAAQC,MAAMC,KAAK,CACvBZ,OAAQK,KAAKhB,MAAMwB,WAClBC,KAAI,kBAAM,kBAAC,EAAD,SACb,OACE,yBAAKZ,UAAU,gBACb,yBAAKA,UAAU,aAAf,IAA6BQ,EAA7B,KADF,IAC8C,S,GAV5BH,aAAlBE,EACGD,aAAe,CACpBK,SAAU,IAcCJ,QCGAM,MAnBf,WACE,OACE,yBAAKb,UAAU,MAAMC,MAAO,CAAEa,UAAW,WACvC,wBAAId,UAAU,UAAd,iBACA,wBAAIA,UAAU,WAAd,iCACA,uBAAGA,UAAU,YAAb,mcASA,kBAAC,EAAD,QCdNe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.eeddef13.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Container.css\";\n\nclass Box extends Component {\n  static defaultProps = {\n    colorArr: [\n      \"#a8e6cf\",\n      \"#413c69\",\n      \"#d7fffd\",\n      \"#75daad\",\n      \"#f35588\",\n      \"#dc2ade\",\n      \"#a3f7bf\",\n      \"#f4dada\",\n      \"#ffb6b9\",\n      \"#feb72b\",\n      \"#f1f3f4\",\n      \"#27496d\",\n      \"#21243d\",\n      \"#fdba9a\",\n      \"#9399ff\",\n      \"#fbe3b9\",\n      \"#400082\",\n      \"#ff7315\",\n      \"#ffe8d6\",\n      \"#678a74\",\n      \"#706c61\",\n      \"#e1f4f3\",\n      \"#333333\",\n      \"#434e52\",\n      \"#ededed\",\n      \"#fcf8e8\",\n      \"#ecdfc8\",\n      \"#b21f66\",\n      \"#30475e\",\n      \"#feb72b\",\n      \"#9de3d0\",\n      \"#fafba4\",\n      \"#8ac6d1\",\n      \"#f6f4e6\",\n      \"#ede59a\",\n      \"#d5c455\",\n      \"#fddb3a\",\n      \"#effcef\",\n      \"#ccedd2\",\n      \"#94d3ac\",\n      \"#655c56\",\n      \"#e89da2\",\n      \"#ee8572\",\n      \"#bbcfff\",\n      \"#21bf73\",\n      \"#a7e9af\",\n    ],\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: this.choice(this.props.colorArr),\n    };\n  }\n\n  handleClick = () => {\n    let newColor = this.choice(this.props.colorArr);\n    this.setState({\n      color: newColor,\n    });\n  };\n\n  choice = (arr) => {\n    let randomI = Math.floor(Math.random() * arr.length);\n    return arr[randomI];\n  };\n\n  render() {\n    return (\n      <div\n        className=\"Box\"\n        style={{\n          backgroundColor: this.state.color,\n        }}\n        onClick={this.handleClick}\n      ></div>\n    );\n  }\n}\n\nexport default Box;\n","import React, { Component } from \"react\";\nimport Box from \"./Box\";\nimport \"./App.css\";\n\nclass Container extends Component {\n  static defaultProps = {\n    numBoxes: 12,\n  };\n  render() {\n    const boxes = Array.from({\n      length: this.props.numBoxes,\n    }).map(() => <Box />);\n    return (\n      <div className=\"boxContainer\">\n        <div className=\"Container\"> {boxes} </div>;{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./Container\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ textAlign: \"center\" }}>\n      <h1 className=\"Header\"> /RandomHex/ </h1>\n      <h3 className=\"Mission\">A local option to find colors</h3>\n      <p className=\"Sentence\">\n        My favorite coffee shop doesnt have WIFI and I dont want to hotspot and\n        use my phones data, this solution works with a color picker tool from\n        the google chrome store. when you click on the color without the color\n        picker selected, it will change colors, there are lots of possibilities\n        to choose from. Selecting colors without internet is now a breeze and I\n        can have a more optimized creative workflow. App optimized for 13.3 inch\n        screens on Chrome\n      </p>\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}